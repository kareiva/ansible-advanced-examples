---
- name: Demonstrate different loop types
  hosts: localhost
  vars_files:
    - vars.yml
  tasks:
    - name: Standard loop
      ansible.builtin.debug:
        msg: "Item: {{ item }}"
      loop: "{{ simple_list }}"
      # Output: Item: apple
      # Output: Item: banana
      # Output: Item: cherry

    - name: With_items example
      ansible.builtin.debug:
        msg: "Name: {{ item.name }}, Value: {{ item.value }}"
      with_items: "{{ sample_list }}"
      # Output: Name: item1, Value: 100
      # Output: Name: item2, Value: 200
      # Output: Name: item3, Value: 300

    - name: With_dict example
      ansible.builtin.debug:
        msg: "Key: {{ item.key }}, Description: {{ item.value.desc }}"
      with_dict: "{{ sample_dict }}"
      # Output: Key: key1, Description: First item
      # Output: Key: key2, Description: Second item
      # Output: Key: key3, Description: Third item

    - name: Nested loop example 1 - List and dict combination
      ansible.builtin.debug:
        msg: "Item {{ item.0.name }} has value {{ item.1.value }} from dict {{ item.1.value.desc }}"
      with_nested:
        - "{{ sample_list }}"
        - "{{ sample_dict | dict2items }}"
      # Output: Item item1 has value 10 from dict First item
      # Output: Item item1 has value 20 from dict Second item
      # Output: Item item1 has value 30 from dict Third item
      # Output: Item item2 has value 10 from dict First item
      # ... and so on

    - name: Nested loop example 2 - Product of two lists
      ansible.builtin.debug:
        msg: "Fruit: {{ item.0 }}, Number: {{ item.1 }}"
      with_nested:
        - "{{ simple_list }}"
        - [1, 2, 3]
      # Output: Fruit: apple, Number: 1
      # Output: Fruit: apple, Number: 2
      # Output: Fruit: apple, Number: 3
      # Output: Fruit: banana, Number: 1
      # ... and so on

    - name: Nested loop example 3 - Using loop instead of with_nested
      ansible.builtin.debug:
        msg: "Name: {{ item[0].name }}, Dict: {{ item[1] }}"
      loop: "{{ sample_list | product(sample_dict.keys()) | list }}"
      # Output: Name: item1, Dict: key1
      # Output: Name: item1, Dict: key2
      # Output: Name: item1, Dict: key3
      # Output: Name: item2, Dict: key1
      # ... and so on 